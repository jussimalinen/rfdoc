*** Settings ***
Library         SeleniumLibrary  ${EMPTY}  ${EMPTY}  ${SELENIUM PORT}
Library         OperatingSystem
Library         RFDocDataBase
Library         NameParser

*** Variables ***
${RFDOC PORT}  8000
${SELENIUM PORT}  4444
${HOST}  localhost:${RFDOC PORT}
${BASE URL}  http://${HOST}
${BROWSER}  firefox
@{BUILTIN KEYWORDS}  Convert To Integer  item  Converts the given item to an integer number.  No Operation  ${EMPTY}  Does absolutely nothing.
@{EXAMPLELIBRARY VERSION 1 KEYWORDS}  First Keyword  first, second=default, *args  First KW doc  My Second Keyword  some  Second KW doc
@{EXAMPLELIBRARY VERSION 2 KEYWORDS}  First Keyword Updated  first, second=default updated, *args  Updated KW doc  My Second Keyword  some  Second KW doc  Third Keyword
...  third  Third KW doc

*** Keywords ***
Given No Libraries Exist In RFDoc
    Clear RFDoc Database

${some libraries} Exist${s} In RFDoc
    Copy file  ${CURDIR}/../testdata/libraries.db  ${CURDIR}/../results/rfdoc.db

"Main" page is open
    Go to  ${BASE URL}

"${name}" Page Is Open
    ${name} =  Set variable  ${name.lower()}
    Go to  ${BASE URL}/${name}

"${name}" page is opened
    Location Should Be  ${BASE URL}/${name}/

Navigate To Library "${name}"
    Go to  ${BASE URL}/lib/${name}
    Title should be  RFDoc | ${name}

User uploads ${library}
    ${file} =  Set Variable  ${library.replace(' ', '_')}.xml
    Upload ${file}

Upload ${file}
    Input text  file  ${CURDIR}${/}..${/}testdata${/}${file}
    Click button  Upload

RFDoc contains ${library name with possible version}
    ${name} =  Get library name  ${library name with possible version}
    Navigate to library "${name}"
    @{keywords} =  Set variable  @{${library name with possible version} KEYWORDS}
    Library should contain keywords  @{keywords}

Library should contain keywords 
    [Arguments]  @{keywords}
    ${source} =  Get source
    :FOR  ${name}  ${args}  ${doc}  IN  @{keywords}
    \  Source should contain keyword  ${source}  ${name}  ${args}  ${doc}

Source Should Contain Keyword
    [Arguments]  ${source}  ${name}  ${args}  ${doc}
    ${match}  ${group1}  ${group2} =  Should Match Regexp  ${source}  (?s)<td class="kw" id="${name}">${name}</td>\\s*<td class="arg">(.*?)</td>\\s*<td class="doc">(.+?)</td>
    Should Be Equal  ${group1}  ${args}
    Should Be Equal  ${group2}  ${doc}

An error "${message}" is shown
    Element should contain  xpath=//ul[@class='errorlist']  ${message}

A notification "${message}" is shown
    Page should contain  ${message}

Message "${message}" is shown
    Page should contain  ${message}

When User Selects "${name}" Option
    Select checkbox  ${name}

The notification contains a link to ${library}
    Page Should Contain Link  /lib/${library}  ${library}
