*** Settings ***
Resource	../rfdoc.tsv


*** Keywords ***
and search page is open
	Navigate to search page	

When user searches using keyword name
	Search keywords	title

Then keywords whose name contain search term case insensitively are displayed  
	Search result should contain keyword name	Get Title
	Search result should contain keyword name	Title Should Be
	Set Test Variable	${NUMBER OF MATCHES}	2

When user searches using keyword name and documentation
	Search keywords	TITLE	search documentation

Then keywords whose name or documentation contain search term case insensitively are displayed  
	Search result should contain keyword name	Get Title
	Search result should contain keyword name	Title Should Be
	Search result should contain keyword name	Select Window
	Set Test Variable	${NUMBER OF MATCHES}	3

and number of matching keywords is displayed
	Page Should Contain	${NUMBER OF MATCHES} matching keywords found.

When user searches with non-matching search term
	Search keywords	non-matching term	search documentation
	
Then message "No matching keywords found." is shown 
	Page should contain	No matching keywords found.

When user searches without entering search term
	Search keywords	${EMPTY}

Then error message "This field is required." is shown 
	Error Should Be Shown	This field is required.

Given user has searched keywords successfully
	Given some libraries exist in RFDoc
	and search page is open
	When user searches using keyword name
	
Then search results contain keyword and library names as links and keyword documentation
	${expected} =	Catenate	SEPARATOR=\\s*	
	...	<table class="keywords results">
	...	<tbody>
	...	<tr>	
	...	<td><a href="/lib/SeleniumLibrary#Get%20Title">Get Title</a></td>
	...	<td><a href="/lib/SeleniumLibrary">SeleniumLibrary</a></td>
	...	<td>Returns title of current page.</td>
	...	</tr>
	...	<tr>	
	...	<td><a href="/lib/SeleniumLibrary#Title%20Should%20Be">Title Should Be</a></td>
	...	<td><a href="/lib/SeleniumLibrary">SeleniumLibrary</a></td>
	...	<td>Verifies that current page title equals `title`.</td>
	...	</tr>
	...	</tbody>
	...	</table>
	${source} =	Get Source
	Should Match Regexp	${source}	${expected}


Then results are shown on search page
	Location Should Be	${SEARCH URL}
	Then keywords whose name or documentation contain search term case insensitively are displayed  
	and number of matching keywords is displayed

Search keywords
	[Arguments]	${search term}	${include doc}=NO
	Run Keyword If	'${include doc}' != 'NO'	Select Checkbox	include_doc
	Input text	search_term	${search term}
	Click Button	search_button

Search result should contain keyword name
	[Arguments]	${keyword name}
	Page should contain element	//td/a[text()='${keyword name}']

