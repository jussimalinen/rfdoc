*** Settings ***
Library         Selenium2Library  run_on_failure=Nothing
Library         OperatingSystem
Library         ${CURDIR}/../lib/NameParser.py

*** Variables ***
${HOST}  localhost
${RFDOC PORT}  7000
${BASE URL}  http://${HOST}:${RFDOC PORT}
${BROWSER}  firefox
${TESTDATA PATH}  ${CURDIR}${/}..${/}testdata
${RESULTS PATH}   ${CURDIR}${/}..${/}results
@{BUILTIN KEYWORDS}  Convert To Integer  item  Converts the given item to an integer number.  No Operation  ${EMPTY}  Does absolutely nothing.
@{EXAMPLELIBRARY VERSION 1 KEYWORDS}  First Keyword  first, second=default, *args  First KW doc  My Second Keyword  some  Second KW doc
@{EXAMPLELIBRARY VERSION 2 KEYWORDS}  First Keyword Updated  first, second=default updated, *args  Updated KW doc  My Second Keyword  some  Second KW doc  Third Keyword  third  Third KW doc
@{EXAMPLELIBRARY VERSION 5 KEYWORDS}  @{EXAMPLELIBRARY VERSION 1 KEYWORDS}

*** Keywords ***
Given no libraries exist in RFDoc
    Copy file  ${TEST DATA PATH}/databases/empty.db
    ...        ${RESULTS PATH}/rfdoc.db

${Some libraries} exist${s} in RFDoc
    Copy file  ${TEST DATA PATH}/databases/libraries.db
    ...        ${RESULTS PATH}/rfdoc.db

"Main" page is open
    Go to  ${BASE URL}

"${name}" page is open
    Go to  ${BASE URL}/${name.lower()}

"${name}" page is opened
    Location should be  ${BASE URL}/${name}

Error "${message}" is shown
    Element should contain  xpath=//ul[@class='errorlist']  ${message}

User selects "${name}" option
    Select checkbox  ${name}

Notification "${message}" is shown
    Page should contain  ${message}

Notification contains a link to ${library}
    Page should contain link  /lib/${library}  ${library}

Notification contains a version "${version}" link to "${library}"
    Page should contain link  /lib/${library}/${version}  ${library}

Navigate to library "${name}"
    Go to  ${BASE URL}/lib/${name}
    Title should be  RFDoc | ${name}

Navigate to versioned library "${name}" "${version}"
    Go to  ${BASE URL}/lib/${name}/${version}
    Title should be  RFDoc | ${name}

User uploads ${library}
    ${file} =  Set Variable  ${library.replace(' ', '_')}.xml
    Upload ${file}

User overrides version with "${version}" and uploads "${library}"
    ${file} =  Set Variable  ${library.replace(' ', '_')}.xml
    Input text  override_version  ${version}
    Upload ${file}

Upload ${file}
    Choose File  file  ${TESTDATA PATH}${/}xmls${/}${file}
    Click button  Upload

RFDoc contains versioned library ${library name with version}
    ${name} =  Get library name  ${library name with version}
    ${version} =  Get library version  ${library name with version}
    Navigate to versioned library "${name}" "${version}"
    @{keywords} =  Set variable  @{${library name with version} KEYWORDS}
    Library should contain keywords  @{keywords}

RFDoc contains library ${library name}
    Navigate to library "${library name}"
    @{keywords} =  Set variable  @{${library name} KEYWORDS}
    Library should contain keywords  @{keywords}

Library should contain keywords  [Arguments]  @{keywords}
    ${source} =  Get source
    :FOR  ${name}  ${args}  ${doc}  IN  @{keywords}
    \  Source should contain keyword  ${source}  ${name}  ${args}  ${doc}

Source should contain keyword  [Arguments]  ${source}  ${name}  ${args}  ${doc}
    ${match}  ${group1}  ${group2} =  Should Match Regexp  ${source}
    ...      (?s)<td id="${name.replace(' ', '')}" class="kw">${name}</td>\\s*<td class="arg">(.*?)</td>\\s*<td class="doc">(.+?)</td>
    Should be equal  ${group1}  ${args}
    Should be equal  ${group2}  ${doc}
